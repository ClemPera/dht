[package]
name = "esp-idf-dht"
version = "0.1.2"
authors = ["clemPera <clement.pera@protonmail.com>"]
edition = "2021"
repository = "https://github.com/ClemPera/esp-idf-dht"
homepage = "https://github.com/ClemPera/esp-idf-dht"
documentation = "https://docs.rs/esp-idf-dht/latest/esp-idf-dht"
description = "Read values from DHT11/DHT22 temperature and humidity sensors using esp-idf"
resolver = "2"
rust-version = "1.77"
categories = ["embedded"]
keywords = ["esp", "esp32", "dht", "dht11", "dht22"]
license = "AGPL-3.0"
readme = "README.md"

# [[bin]]
# name = "esp-idf-dht"
# harness = false # do not use the built in cargo test harness -> resolve rust-analyzer errors

[profile.release]
opt-level = "s"

[profile.dev]
debug = true    # Symbols are nice and they don't increase the size on Flash
opt-level = "z"

# experimental = ["esp-idf-svc/experimental"]

# [dependencies]
[target.'cfg(target_arch = "xtensa")'.dependencies]
# log = "0.4"
# esp-idf-svc = "0.51"
esp-idf-hal = "^0.45"
anyhow = "^1.0.98"

# --- Optional Embassy Integration ---
# esp-idf-svc = { version = "0.51", features = ["critical-section", "embassy-time-driver", "embassy-sync"] }

# If you enable embassy-time-driver, you MUST also add one of:

# a) Standalone Embassy libs ( embassy-time, embassy-sync etc) with a foreign async runtime:
# embassy-time = { version = "0.4.0", features = ["generic-queue-8"] } # NOTE: any generic-queue variant will work

# b) With embassy-executor:
# embassy-executor = { version = "0.7", features = ["executor-thread", "arch-std"] }

# NOTE: if you use embassy-time with embassy-executor you don't need the generic-queue-8 feature

# --- Temporary workaround for embassy-executor < 0.8 ---
# esp-idf-svc = { version = "0.51", features = ["embassy-time-driver", "embassy-sync"] }
# critical-section = { version = "1.1", features = ["std"], default-features = false }

[build-dependencies]
embuild = "0.33"
